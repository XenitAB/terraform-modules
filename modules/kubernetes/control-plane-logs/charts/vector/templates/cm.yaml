apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  namespace: controle-plane-logs
  labels:
    {{- include "vector.labels" . | nindent 4 }}
data:
  hostname: {{ .Values.azureConfig.hostname }}
  topic: {{ .Values.azureConfig.topic }}
  vector.toml: |
    ## Kafka source
    [sources.in_azure_events]
      type = "kafka"
      bootstrap_servers = "${HOST:?err}"
      topics = ["${TOPIC:?err}"]  # event hub name
      group_id = '$$Default'
      librdkafka_options."security.protocol" = "sasl_ssl"

    [sources.in_azure_events.sasl]
      enabled = true
      mechanism = "PLAIN"
      username = "$$ConnectionString"
      password = "${PASSWORD:?err}"

    [transforms.azure_events_parse]
      type = "remap"
      inputs = ["in_azure_events"]
      source = '''
      . = parse_json!(string!(.message))
      . = unnest!(.records)
      '''

    [transforms.post_unset]
      type = "remap"
      inputs = ["azure_events_parse"]
      source = '''
      . = {
        "category": .records.category,
        "log": .records.properties.log,
        "time": .records.time
      }
      '''

    [sinks.console]
    type = "console"
    inputs = [ "post_unset" ]
    target = "stdout"
      [sinks.console.encoding]
      codec = "json"

    [[tests]]
    name = "Test for the add_metadata transform"

    # The inputs for the test
    [[tests.inputs]]
    insert_at = "azure_events_parse"
    value = '''
    {
        "records": [
            {
                "Cloud": "AzureCloud",
                "Environment": "prod",
                "UnderlayClass": "hcp-underlay",
                "UnderlayName": "hcp-underlay-westeurope-cx-532",
                "attrs": "{\"annotation.io.kubernetes.container.hash\"=>\"6c729845\", \"annotation.io.kubernetes.container.restartCount\"=>\"1\", \"annotation.io.kubernetes.container.terminationMessagePath\"=>\"/dev/termination-log\", \"annotation.io.kubernetes.container.terminationMessagePolicy\"=>\"File\", \"annotation.io.kubernetes.pod.terminationGracePeriod\"=>\"30\", \"io.kubernetes.container.logpath\"=>\"/var/log/pods/61c3007676e1190001904a48_cluster-autoscaler-7946d6df54-bb7sp_f914af72-c120-4857-864b-321903fa72cc/cluster-autoscaler/1.log\", \"io.kubernetes.container.name\"=>\"cluster-autoscaler\", \"io.kubernetes.docker.type\"=>\"container\", \"io.kubernetes.pod.name\"=>\"cluster-autoscaler-7946d6df54-bb7sp\", \"io.kubernetes.pod.namespace\"=>\"61c3007676e1190001904a48\", \"io.kubernetes.pod.uid\"=>\"f914af72-c120-4857-864b-321903fa72cc\", \"io.kubernetes.sandbox.id\"=>\"5139cf588568367542537c56d56a24d73e1ee4d036b3aff8229a33791d51abdf\", \"maintainer\"=>\"Marcin Wielgus <mwielgus@google.com>\"}",
                "category": "cluster-autoscaler",
                "ccpNamespace": "61c3007676e1190001904a48",
                "operationName": "Microsoft.ContainerService/managedClusters/diagnosticLogs/Read",
                "properties": {
                    "containerID": "86ebc6c0d23229ced2ff87c19e6f6d96a60738d2424da257971abd2e8c75e1e5",
                    "log": "I0914 08:59:24.572586       1 azure_scale_set.go:211] VMSS: aks-standard1-10276856-vmss, returning in-memory size: 4\n",
                    "pod": "cluster-autoscaler-7946d6df54-bb7sp",
                    "stream": "stderr"
                },
                "resourceId": "/SUBSCRIPTIONS/EB0F897D-2FFC-4BC1-9AC7-F0932655890C/RESOURCEGROUPS/RG-QA-WE-AKS/PROVIDERS/MICROSOFT.CONTAINERSERVICE/MANAGEDCLUSTERS/AKS-QA-WE-AKS1",
                "time": "2022-09-14T08:59:24.0000000Z"
            },
            {
                "Cloud": "AzureCloud",
                "Environment": "prod",
                "UnderlayClass": "hcp-underlay",
                "UnderlayName": "hcp-underlay-westeurope-cx-532",
                "attrs": "{\"annotation.io.kubernetes.container.hash\"=>\"6c729845\", \"annotation.io.kubernetes.container.restartCount\"=>\"1\", \"annotation.io.kubernetes.container.terminationMessagePath\"=>\"/dev/termination-log\", \"annotation.io.kubernetes.container.terminationMessagePolicy\"=>\"File\", \"annotation.io.kubernetes.pod.terminationGracePeriod\"=>\"30\", \"io.kubernetes.container.logpath\"=>\"/var/log/pods/61c3007676e1190001904a48_cluster-autoscaler-7946d6df54-bb7sp_f914af72-c120-4857-864b-321903fa72cc/cluster-autoscaler/1.log\", \"io.kubernetes.container.name\"=>\"cluster-autoscaler\", \"io.kubernetes.docker.type\"=>\"container\", \"io.kubernetes.pod.name\"=>\"cluster-autoscaler-7946d6df54-bb7sp\", \"io.kubernetes.pod.namespace\"=>\"61c3007676e1190001904a48\", \"io.kubernetes.pod.uid\"=>\"f914af72-c120-4857-864b-321903fa72cc\", \"io.kubernetes.sandbox.id\"=>\"5139cf588568367542537c56d56a24d73e1ee4d036b3aff8229a33791d51abdf\", \"maintainer\"=>\"Marcin Wielgus <mwielgus@google.com>\"}",
                "category": "cluster-autoscaler",
                "ccpNamespace": "61c3007676e1190001904a48",
                "operationName": "Microsoft.ContainerService/managedClusters/diagnosticLogs/Read",
                "properties": {
                    "containerID": "86ebc6c0d23229ced2ff87c19e6f6d96a60738d2424da257971abd2e8c75e1e5",
                    "log": "I0914 08:59:24.572873       1 azure_scale_set.go:211] VMSS: aks-standard1-10276856-vmss, asfas in-memory size: 4\n",
                    "pod": "cluster-autoscaler-7946d6df54-bb7sp",
                    "stream": "stderr"
                },
                "resourceId": "/SUBSCRIPTIONS/EB0F897D-2FFC-4BC1-9AC7-F0932655890C/RESOURCEGROUPS/RG-QA-WE-AKS/PROVIDERS/MICROSOFT.CONTAINERSERVICE/MANAGEDCLUSTERS/AKS-QA-WE-AKS1",
                "time": "2022-09-14T08:59:24.0000000Z"
            }
          ]
    }
    '''

    [[tests.outputs]]
    extract_from = "post_unset"

    [[tests.outputs.conditions]]
    type = "vrl"
    source = '''
    assert!(exists(.log))
    assert!(is_string(.log), "message field has as unexpected type")
    '''
