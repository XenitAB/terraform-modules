apiVersion: v1
kind: ServiceAccount
metadata:
  name: wait-for-certs
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wait-for-certs
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wait-for-certs
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: wait-for-certs
subjects:
- kind: ServiceAccount
  name: wait-for-certs
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: wait-for-certs
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    spec:
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      serviceAccountName: wait-for-certs
      containers:
      - name: wait-for-certs
        image: quay.io/bitnami/kubectl:1.21
        command: ["sh", "-c", "timeout 3m bash -c 'until kubectl get secret linkerd-identity-issuer linkerd-proxy-injector-k8s-tls linkerd-sp-validator-k8s-tls linkerd-trust-anchor webhook-issuer-tls; do sleep 1; done'"]