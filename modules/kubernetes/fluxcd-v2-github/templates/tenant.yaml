apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ${name}
  name: flux
  namespace: ${name}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ${name}
  name: gotk-reconciler
  namespace: ${name}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: User
  name: gotk:${name}:reconciler
- kind: ServiceAccount
  name: flux
  namespace: ${name}
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: ${name}
  namespace: ${name}
spec:
  gitImplementation: libgit2
  interval: 1m
  url: ${repo}
  secretRef:
    name: flux
  ref:
    branch: ${branch}
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
kind: Kustomization
metadata:
  name: ${name}
  namespace: ${name}
spec:
  serviceAccountName: flux
  interval: 5m
  path: ./tenant/${environment}
  sourceRef:
    kind: GitRepository
    name: ${name}
  prune: true
  validation: client
%{ if create_crds == true }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flux-tenant-${name}-crd-manage
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flux-tenant-${name}-crd-manage
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: flux
    namespace: ${name}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux-tenant-${name}-crd-manage
%{ endif }
