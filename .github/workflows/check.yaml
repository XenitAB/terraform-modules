name: check
on: [pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: Setup TFLint
        uses: lablabs/setup-tflint@v1.0.2
        with:
          tflint_version: v0.24.1
      - name: Install azurerm plugin
        run: |
          mkdir -p .tflint.d/plugins
          wget https://github.com/terraform-linters/tflint-ruleset-azurerm/releases/download/v0.8.2/tflint-ruleset-azurerm_linux_amd64.zip
          unzip tflint-ruleset-azurerm_linux_amd64.zip
          mv tflint-ruleset-azurerm .tflint.d/plugins/
      - name: Run lint
        run: |
          make lint
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
      - name: Run fmt
        run: |
          make fmt
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make fmt and commit changes'
            exit 1
          fi
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: Setup terraform-docs
        env:
          TERRAFORM_DOCS_VERSION: "v0.10.1"
          TERRAFORM_DOCS_SHA: "37fa36d8340ceebf54f9eda73570ddbccb04fd0a53c133d3deae279161d941a1"
        run: |
          curl -Lo ./terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-$(uname | tr '[:upper:]' '[:lower:]')-amd64
          DOWNLOAD_TERRAFORM_DOCS_SHA=$(openssl sha1 -sha256 terraform-docs | awk '{print $2}')
          if [[ "${TERRAFORM_DOCS_SHA}" != "${DOWNLOAD_TERRAFORM_DOCS_SHA}" ]]; then
              echo "Downloaded checksum (${DOWNLOAD_TERRAFORM_DOCS_SHA}) for terraform-docs does not match expected value: ${TERRAFORM_DOCS_SHA}"
              exit 1
          fi
          chmod +x ./terraform-docs
          mkdir -p ~/.local/bin/
          mv ./terraform-docs ~/.local/bin/terraform-docs
      - name: Run docs
        run: |
          export PATH=${PATH}:~/.local/bin
          make docs
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make docs and commit changes'
            exit 1
          fi
  tfsec:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: Setup tfsec
        env:
          TFSEC_VERSION: "v0.37.2"
          TFSEC_SHA: "bd3fc58aad65b32eb4f4411770fcc442a324f6191e3723207f644cb6207b9cff"
        run: |
          wget https://github.com/tfsec/tfsec/releases/download/${TFSEC_VERSION}/tfsec-linux-amd64
          DOWNLOAD_TFSEC_SHA=$(openssl sha1 -sha256 tfsec-linux-amd64 | awk '{print $2}')
          if [[ "${TFSEC_SHA}" != "${DOWNLOAD_TFSEC_SHA}" ]]; then
              echo "Downloaded checksum (${DOWNLOAD_TFSEC_SHA}) for tfsec does not match expected value: ${TFSEC_SHA}"
              exit 1
          fi
          chmod +x tfsec-linux-amd64
          mkdir -p ~/.local/bin/
          mv ./tfsec-linux-amd64 ~/.local/bin/tfsec
      - name: Run tfsec
        run: |
          export PATH=${PATH}:~/.local/bin
          make tfsec
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
      - name: Run terraform validate
        run: |
          make validate
